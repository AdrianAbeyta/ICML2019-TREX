<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <!-- Load required parameters from .yaml file -->
    <rosparam command="load" file="$(find trex_openai_ros)/config/walrus_test_params.yaml" />

    <!-- Define arguments needed for the learning script -->
    <!-- Make changes here -->
    <arg name="env_id" value="WalrusTest-v0"/>
    <arg name="env_type" value="openai_ros"/>
    
    <arg name="learners_path" value="$(find trex_openai_ros)/learner/demo_models/walrus/checkpoints"/>
    <arg name="max_chkpt" value="60"/>
    <arg name="num_models" value="5"/>
    <arg name="max_steps" value="40"/>
    <arg name="noise" value="0.0"/>
    <arg name="traj_noise" value="0"/>
    <arg name="num_layers" value="2"/>
    <arg name="log_dir" value="$(find trex_openai_ros)/log/walrus/max60/gt_traj_no_steps_noise/"/>
    <arg name="preference_type" value="gt_traj_no_steps_noise"/>
    <arg name="D" value="10000"/>
    <arg name="stochastic" value="true"/>
    <arg name="evaluate" value="false"/>
    <arg name="rl_runs" value="5"/>
    <arg name="ppo_log_path" value="preference_norm_ctrl_coeff_011"/>
    <arg name="custom_reward" value="preference_normalized"/>
    <arg name="ctrl_coeff" value="0.1"/>
    <arg name="agent" value="ppo2"/>

    <!-- Define openai_ros parameters -->
    <!-- <param name="walrus/ros_ws_abspath" value="/home/jd/trex_ros_ws"/> -->

    <!-- Launch the preference_learning script with the supplied arguments -->
    <!-- If desired, change name and namespace attributes. Args attribute shouldn't need to be edited. -->
    <node pkg="trex_openai_ros" name="trex_checkpoints" type="trex_gen_checkpoints.py" output="screen"
    args="--env_id=$(arg env_id)
    --env_type=$(arg env_type)
    --learners_path=$(arg learners_path)
    --max_chkpt=$(arg max_chkpt)
    --num_models=$(arg num_models)
    --max_steps=$(arg max_steps)
    --noise=$(arg noise)
    --traj_noise=$(arg traj_noise)
    --num_layers=$(arg num_layers)
    --log_dir=$(arg log_dir)
    --preference_type=$(arg preference_type)
    --D=$(arg D)
    --stochastic
    --rl_runs=$(arg rl_runs)
    --ppo_log_path=$(arg ppo_log_path)
    --custom_reward=$(arg custom_reward)
    --ctrl_coeff=$(arg ctrl_coeff)
    --agent=$(arg agent)"/>
</launch>